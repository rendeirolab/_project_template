[project]
name = "{{ cookiecutter.project_slug }}"
authors = [
    {name = "{{ cookiecutter.username }}", email = "{{ cookiecutter.email }}"},
]
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
keywords = [
    "computational biology",
    "bioinformatics",
]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha",
    "Typing :: Typed",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
license = {text = "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"}
requires-python = ">=3.10"
dependencies = [
    "tqdm>=4.64.0",
    "parmap>=1.5.3",
    "cloudpickle>=3.1.1",
    "pyarrow>=19.0.0",
    "numpy>=1.22",
    "pandas>=1.4.3",
    "anndata>=0.8.0",
    "scanpy>=1.10.4",
    "matplotlib>=3.5.2",
    "seaborn>=0.11.2",
    "scipy>=1.6",
    "pingouin>=0.5.2",
    "scikit-learn>=1.0.2",
    "scikit-image>=0.25.0",
    "networkx>=2.4",
    "seaborn-extensions>=0.2.0",
]
dynamic = ['version']

[project.optional-dependencies]
dev = [
    "ipython>=8.32.0",
    "black[d]>=25.1.0",
    "mypy>=1.14.1",
    "pylint>=3.3.4",
    "git-lint>=0.1.2",
    "rich>=13.9.4",
]
test = [
    "pytest>=6",
    "pytest-cov>=6.0.0",
]
doc = [
    "sphinx>=8.1.3",
    "sphinx-issues>=5.0.0",
    "sphinx-rtd-theme>=3.0.2",
    "sphinx-autodoc-typehints>=3.0.1",
]


[project.urls]
homepage = "https://github.com/rendeirolab/{{ cookiecutter.project_slug }}"
documentation = "https://github.com/rendeirolab/{{ cookiecutter.project_slug }}/blob/main/README.md"
repository = "https://github.com/rendeirolab/{{ cookiecutter.project_slug }}"

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
license-files = []  # https://github.com/astral-sh/uv/issues/9513

[tool.setuptools_scm]
write_to = {% if cookiecutter.project_type == "software" -%} "{{ cookiecutter.project_slug }}/_version.py" {%- elif cookiecutter.project_type == "research" -%} "_version.py" {%- endif %}
write_to_template = 'version = __version__ = "{version}"'

[tool.black]
line-length = 90
target-version = ['py310']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.mypy]
python_version = '3.10'
warn_return_any = true
warn_unused_configs = true

# Packages without type annotations in shed yet
[[tool.mypy.overrides]]
module = [
    'numpy.*',
    'pandas.*',
    'scipy.*',
    'skimage.*',
    'matplotlib.*',
    'networkx.*',
    'pingouin.*',
    'tqdm.*',
    'anndata.*',
    'scanpy.*',
    {% if cookiecutter.project_type == "software" -%} '{{ cookiecutter.project_slug }}.*' {%- endif %}
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
    "integration",
]
markers = [
    'slow',
    'serial',
]
