# PIP, using PEP621
[project]
name = "{{ cookiecutter.project_slug }}"
authors = [
    {name = "{{ cookiecutter.username }}", email = "{{ cookiecutter.email }}"},
]
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
keywords = [
    "computational biology",
    "bioinformatics",
]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha",
    "Typing :: Typed",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
#license = "gpt3"
requires-python = ">=3.10"
# not yet supported by pip!
dependencies = [
    "tqdm>=4.64.0",
    "parmap>=1.5.3",
    "numpy>=1.22",
    "pandas>=1.4.3",
    "anndata>=0.8.0",
    "matplotlib>=3.5.2",
    "seaborn>=0.11.2",
    "scipy>=1.6",
    "pingouin>=0.5.2",
    "scikit-learn>=1.0.2",
    "scikit-image>=1.18",
    "networkx>=2.4",
    "seaborn-extensions>=0.20.0",
]
dynamic = ['version']

[project.optional-dependencies]
# not yet supported by pip!
dev = [
    "ipython",
    "black[d]",
    "mypy",
    "pylint",
    "git-lint",
    "pytest",
    "rich",
    "PyQt5",
]
test = [
    "pytest>=6",
    "pytest-cov",
]
doc = [
    "Sphinx",
    "sphinx-issues",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints"
]

[project.urls]
homepage = "https://github.com/rendeirolab/{{ cookiecutter.project_slug }}"
documentation = "https://github.com/rendeirolab/{{ cookiecutter.project_slug }}/blob/main/README.md"
repository = "https://github.com/rendeirolab/{{ cookiecutter.project_slug }}"

[build-system]
# requires = ["poetry>=0.12", "setuptools>=45", "wheel", "poetry-dynamic-versioning"]
# build-backend = "poetry.masonry.api"
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "{{ cookiecutter.project_slug }}/_version.py"
write_to_template = 'version = __version__ = "{version}"'

# Poetry
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.0.0"  # waiting on next release of poetry to use dynamic-versioning extension
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.username }} <{{ cookiecutter.email }}>",]
license = "GPL-3.0-or-later"

[tool.poetry.dependencies]
python = "^3.10"
tqdm = "^4.64.0"
parmap = "^1.5.3"
numpy = "^1.22"
pandas = "^1.4.3"
anndata = "^0.8.0"
matplotlib = "^3.5.2"
seaborn = "^0.11.2"
scipy = "^1.6"
pingouin = "^0.5.2"
scikit-learn = "^1.0.2"
scikit-image = "^1.18"
networkx = "^2.4"
seaborn-extensions = "^0.20.0"

[tool.poetry.dev-dependencies]
ipython = "^7.16.1"
pylint = "^2.5.3"
git-lint = "^0.1.2"
black = {extras = ["d"], version = "^19.10b0"}
mypy = "^0.782"
pytest = "^5.4.3"
Sphinx = "^3.1.1"
sphinx-issues = "^1.2.0"
sphinx-rtd-theme = "^0.5.0"
sphinx-autodoc-typehints = "^1.12.0"

[tool.poetry.extras]


[tool.black]
line-length = 90
target-version = ['py310']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.mypy]
python_version = '3.10'
warn_return_any = true
warn_unused_configs = true

# Packages without type annotations in shed yet
[[tool.mypy.overrides]]
module = [
    'numpy.*',
    'pandas.*',
    'scipy.*',
    'skimage.*',
    'matplotlib.*',
    'networkx.*',
    'pingouin.*',
    'tqdm.*',
    'anndata.*',
    'scanpy.*',
    #
    '{{ cookiecutter.project_slug }}.*'
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
    "integration",
]
markers = [
    'slow', # 'marks tests as slow (deselect with "-m 'not slow'")',
    'serial'
]
